# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master
variables:
  buildConfiguration: 'Release'

stages:
  - stage: windowsbuild
    displayName: 'Build for Windows'
    jobs: 
    - job: build
      displayName: 'Windows Build'
      pool:
        vmImage: 'windows-latest'

      steps:
      - task: DotNetCoreCLI@2
        displayName: 'Restore'
        inputs:
          command: 'restore'
          projects: '**/**/*.csproj'
          feedsToUse: 'select'
      - task: DotNetCoreCLI@2
        displayName: "Build"
        inputs:
          command: 'build'
          projects: '**/*.csproj'
        

  # - stage: windowsbuild
  #   displayName: 'Build for MacOS'
  - stage: linuxbuild
    displayName: 'Build for Linux'
    jobs: 
      - job: build
        displayName: 'Linux Build'
        pool:
          vmImage: 'ubuntu-latest'

        steps:
        - task: DotNetCoreCLI@2
          displayName: 'Restore'
          inputs:
            command: 'restore'
            projects: '**/**/*.csproj'
            feedsToUse: 'select'
        - task: DotNetCoreCLI@2
          displayName: 'Build'
          inputs:
            command: 'build'
            projects: '**/*.csproj'
        - task: NuGetToolInstaller@1
          displayName: 'NUGET Installer'
          inputs:
            versionSpec: 
        - task: DotNetCoreCLI@2
          displayName: 'Publish Artifacts'
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '**/**/*.csproj'
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
            zipAfterPublish: false
        - task: DotNetCoreCLI@2
          displayName: "Package for NUGET"
          inputs:
            command: 'pack'
            packagesToPack: '**/**/*.csproj'
            nobuild: true
            versioningScheme: 'off'
        - task: NuGetCommand@2
          displayName: 'NUGET push to Gallery'
          condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
          inputs:
            command: 'push'
            packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
            nuGetFeedType: 'external'
            publishFeedCredentials: 'HTTP Client Helper NUGET'

        
